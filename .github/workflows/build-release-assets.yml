name: Build & Upload Release Binaries

on:
  push:
    tags:
    - "v*"
  create:
    tags:
    - "v*"
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Custom tag name (optional)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        # https://docs.github.com/en/actions/how-tos/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
        - target: x86_64-pc-windows-msvc
          os: windows-latest
        - target: aarch64-pc-windows-msvc
          os: windows-11-arm
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-latest
        - target: aarch64-unknown-linux-gnu
          os: ubuntu-24.04-arm
        - target: x86_64-apple-darwin
          os: macos-latest
        - target: aarch64-apple-darwin
          os: macos-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v5

    - name: Install rustup
      if: ${{ matrix.os == 'windows-11-arm' }}
      uses: dtolnay/rust-toolchain@stable

    - name: Update Rust
      run: rustup update

    - name: Add target
      run: rustup target add ${{ matrix.target }}

    - name: Build
      run: cargo build --release --locked --verbose --target ${{ matrix.target }}

    - name: Package binary 
      shell: pwsh
      run: |
        $name = "rust-mcp-server"
        $target = "${{ matrix.target }}"
        $targetDir = "target/$target/release"
        if ($target.contains("windows")) {
            $targetName = "$name.exe"
        } else {
            $targetName = $name
        }
        $distDir = "dist"
        $outName = "$name-$target.tar.gz"        
        New-Item -ItemType Directory -Force -Path $distDir | Out-Null

        $outputPath = "$distDir/$outName"
        Write-Host "Creating archive: tar -czf $outputPath -C $targetDir $targetName"
        tar -czf $outputPath -C $targetDir $targetName

    - name: Upload release asset
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        tag_name: ${{ inputs.tag_name || github.ref_name }}
